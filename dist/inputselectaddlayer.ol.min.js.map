{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/inputselectaddlayerAnidatedSelect.html","webpack:///./src/templates/inputselectaddlayerOptionGroups.html","webpack:///./src/templates/inputselectaddlayer.html","webpack:///./src/impl/ol/js/inputselectaddlayercontrol.js","webpack:///./src/facade/js/inputselectaddlayercontrol.js","webpack:///./src/facade/js/inputselectaddlayer.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","InputselectaddlayerControl","M","impl","Control","map","html","config","utils","isUndefined","InputselectaddlayerImplControl","exception","layer","checkConfig","title","Promise","success","fail","template","compileSync","templateVars","element","addEvents","this","layerSelector","querySelector","Array","isArray","data","groupSelector","disabled","addEventListener","selectedIndex","layerList","getGroupLayersByName","remove","group","layerGroups","getLayersFromGroup","fillLayerSelectorOptionGroups","fillLayerSelector","LoadLayer","control","groupList","isGroup","index","length","push","vars","groups","templateSelectAnidated","getLayersFromGroupsLayers","templateSelectOptionGroups","layers","templateSelect","find","layersGroups","arrayLayers","x","y","values","innerHTML","document","createElement","textContent","appendChild","options","styles","legend","optgroup","label","option","split","style","map_","removeLayers","addLayers","setOpacity","displayInLayerSwitcher","getControls","render","on","evt","LOAD","fire","Inputselectaddlayer","Plugin","controls_","metadata_","api","metadata","control_","panel_","ui","Panel","className","position","TR","collapsedButtonClass","tooltip","addControls","addPanels","ADDED_TO_MAP","window","plugin","M$plugin$Inputselectaddlayer","M$control$InputselectaddlayerControl","M$impl$control$InputselectaddlayerControl"],"mappings":"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","file":"inputselectaddlayer.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = \"<div id=\\\"inputselectaddlayer\\\" class=\\\"m-control m-container m-inputselectaddlayer\\\">\\n  {{#if title}}\\n  <div id=\\\"m-inputselectaddlayer-content\\\" class=\\\"m-inputselectaddlayer-content\\\">\\n    <div id=\\\"m-inputselectaddlayer-content-title\\\" class=\\\"m-inputselectaddlayer-content-title\\\">\\n      {{title}}\\n    </div>\\n    {{/if}}\\n    <div id=\\\"m-inputselectaddlayer-content-body\\\" class=\\\"m-inputselectaddlayer-content-body\\\">\\n      <select id='groupSelector' class=\\\"m-inputselectaddlayer-select select-group\\\" name=\\\"select\\\">\\n        <option value=\\\"\\\"> --- Selecciona un Grupo --- </option>\\n        {{#each groups}}\\n        <option value=\\\"{{this}}\\\">{{this}}</option>\\n        {{/each}}\\n      </select>\\n\\n      <select id='layerSelector' class=\\\"m-inputselectaddlayer-select select-layer\\\" name=\\\"select\\\">\\n        <option value=\\\"\\\"> --- Selecciona una capa --- </option>\\n      </select>      \\n    </div>\\n  </div>\\n</div>\";","module.exports = \"<div id=\\\"inputselectaddlayer\\\" class=\\\"m-control m-container m-inputselectaddlayer\\\">\\n  <div id=\\\"m-inputselectaddlayer-content\\\" class=\\\"m-inputselectaddlayer-content\\\">\\n    {{#if title}}\\n    <div id=\\\"m-inputselectaddlayer-content\\\" class=\\\"m-inputselectaddlayer-content\\\">\\n      <div id=\\\"m-inputselectaddlayer-content-title\\\" class=\\\"m-inputselectaddlayer-content-title\\\">\\n        {{title}}\\n      </div>\\n      {{/if}}\\n    <div id=\\\"m-inputselectaddlayer-content-body\\\" class=\\\"m-inputselectaddlayer-content-body\\\">\\n      <select id='layerSelector' class=\\\"m-inputselectaddlayer-select\\\" name=\\\"select\\\">\\n        <option value=\\\"\\\"> --- Selecciona una capa --- </option>\\n        {{#each groups}}\\n        <optgroup label=\\\"{{group}}\\\">\\n          {{#each layers}}\\n          <option value=\\\"{{this.name}}*{{this.options.styles}}\\\">{{this.legend}}</option>\\n          {{/each}}\\n          {{/each}}\\n        </optgroup>\\n      </select>\\n    </div>\\n  </div>\\n</div>\";","module.exports = \"<div id=\\\"inputselectaddlayer\\\" class=\\\"m-control m-container m-inputselectaddlayer\\\">\\n  {{#if title}}\\n  <div id=\\\"m-inputselectaddlayer-content\\\" class=\\\"m-inputselectaddlayer-content\\\">\\n    <div id=\\\"m-inputselectaddlayer-content-title\\\" class=\\\"m-inputselectaddlayer-content-title\\\">\\n      {{title}}\\n    </div>\\n    {{/if}}\\n    <div id=\\\"m-inputselectaddlayer-content-body\\\" class=\\\"m-inputselectaddlayer-content-body\\\">\\n      <select id=\\\"layerSelector\\\" class=\\\"m-inputselectaddlayer-select\\\" name=\\\"select\\\">\\n        <option value=\\\"\\\"> --- Selecciona una capa --- </option>\\n        {{#each layers}}\\n\\n        <option value=\\\"{{this.name}}*{{this.options.styles}}\\\">{{this.legend}}</option>\\n        {{/each}}\\n        </optgroup>\\n      </select>\\n    </div>\\n  </div>\\n</div>\";","/**\n * @module M/impl/control/InputselectaddlayerControl\n */\nexport default class InputselectaddlayerControl extends M.impl.Control {\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api stable\n   */\n  addTo(map, html) {\n    //const olMap = map.getMapImpl();\n\n    // super addTo - don't delete\n    super.addTo(map, html);\n  }\n\n  // Add your own functions\n}\n","/* eslint-disable no-console */\n/**\n * @module M/control/InputselectaddlayerControl\n */\n\nimport InputselectaddlayerImplControl from 'impl/inputselectaddlayercontrol';\nimport templateSelectOptionGroups from 'templates/inputselectaddlayerOptionGroups';\nimport templateSelectAnidated from 'templates/inputselectaddlayerAnidatedSelect'\nimport templateSelect from 'templates/inputselectaddlayer';\n\nexport default class InputselectaddlayerControl extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class. Creates a PluginControl\n   * control\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api stable\n   */\n  constructor(config) {\n    // 1. checks if the implementation can create PluginControl\n    if (M.utils.isUndefined(InputselectaddlayerImplControl)) {\n      M.exception('La implementación usada no puede crear controles InputselectaddlayerControl');\n    }\n    // 2. implementation of this control\n    const impl = new InputselectaddlayerImplControl();\n    super(impl, 'Inputselectaddlayer');\n    this.layer = null;\n    this.config = config;\n    this.checkConfig(this.config);\n    this.title = config.title;\n  }\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stable\n   */\n  createView(map) {\n\n    return new Promise((success, fail) => {\n      //let html\n      const html = M.template.compileSync(this.template, this.templateVars);\n      // Añadir código dependiente del DOM\n      this.element = html;\n      this.addEvents(html);\n      success(html);\n    });\n  }\n\n  addEvents(html) {\n    // QuerySelector\n    this.layerSelector = html.querySelector('select#layerSelector');\n    if (Array.isArray(this.data)) {\n      this.groupSelector = html.querySelector('select#groupSelector');\n      this.layerSelector.disabled = true;\n      this.groupSelector.addEventListener('change', () => {\n        let value = this.groupSelector[this.groupSelector.selectedIndex].value;\n        this.layerList = this.getGroupLayersByName(value);\n        if (this.groupSelector[0].value == '') {\n          this.groupSelector.remove(0);\n        }\n        if (this.config.group) {\n          this.layerGroups = this.getLayersFromGroup(value);\n          this.fillLayerSelectorOptionGroups(this.layerGroups);\n        } else {\n          this.fillLayerSelector(this.layerList);\n        }\n        this.layerSelector.disabled = false;\n      });\n    }\n    //EventListeners\n    this.layerSelector.addEventListener('change', () => {\n      let value = this.layerSelector[this.layerSelector.selectedIndex].value;\n      this.LoadLayer(value);\n      if (this.layerSelector[0].value == '') {\n        this.layerSelector.remove(0);\n      }\n    });\n  }\n\n  /**\n   * This function gets activation button\n   *\n   * @public\n   * @function\n   * @param {HTML} html of control\n   * @api stable\n   */\n  getActivationButton(html) {\n    return html.querySelector('.m-inputselectaddlayer button');\n  }\n\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api stable\n   */\n  equals(control) {\n    return control instanceof InputselectaddlayerControl;\n  }\n\n  // Add your own functions \n  checkConfig(config) {\n    if (config.hasOwnProperty('title')) {\n      this.title = config.title\n    }\n    this.layerList = new Array();\n    this.groupList = new Array();\n    this.data = config.data;\n    this.isGroup = config.group;\n    if (Array.isArray(this.data) & config.group == true) {\n      // console.log('es anidado con optionGroup')\n      for (let index = 0; index < config.data.length; index++) {\n        this.groupList.push(config.data[index].name)\n      }\n      this.templateVars = { vars: { title: this.title, groups: this.groupList } };\n      this.template = templateSelectAnidated;\n    } else if (Array.isArray(this.data) & config.group == false) {\n      // console.log('es anidado sin optionGroup')\n      for (let index = 0; index < config.data.length; index++) {\n        this.groupList.push(config.data[index].name)\n      }\n      this.templateVars = { vars: { title: this.title, groups: this.groupList } };\n      this.template = templateSelectAnidated;\n    } else if (config.group) {\n      // console.log('no anidado con optionGroup')\n      this.getLayersFromGroupsLayers(this.data.layerGroups);\n      this.templateVars = { vars: { title: this.title, groups: this.data.layerGroups } };\n      this.template = templateSelectOptionGroups;\n    } else {\n      // console.log('no anidado sin optionGroup')\n      this.layerList = this.data.layers;\n\n      this.templateVars = { vars: { title: this.title, layers: this.data.layers } };\n      this.template = templateSelect;\n    }\n\n  }\n\n  getGroupLayersByName(value) {\n    let find = false;\n    let layers = new Array();\n    do {\n      for (let i = 0; i < this.data.length; i++) {\n        if (this.data[i].name == value) {\n          layers = this.data[i].layers\n          find = true;\n        }\n      }\n    } while (!find);\n    return layers\n  }\n\n  getLayersFromGroup(value) {\n    let find = false;\n    let layersGroups = new Array();\n    do {\n      for (let i = 0; i < this.data.length; i++) {\n        if (this.data[i].name == value) {\n          layersGroups = this.data[i].layerGroups\n          find = true;\n        }\n      }\n    } while (!find);\n    return layersGroups\n  }\n\n  getLayersFromGroupsLayers(layerGroups) {\n    let arrayLayers = null\n    let layer = null;\n    for (let x = 0; x < layerGroups.length; x++) {\n      arrayLayers = layerGroups[x].layers;\n      for (let y = 0; y < arrayLayers.length; y++) {\n        layer = arrayLayers[y];\n        this.layerList.push(layer);\n      }\n    }\n  }\n\n  fillLayerSelector(values) {\n    this.layerList = values;\n    this.layerSelector.innerHTML = '';\n    let element = document.createElement('option');\n    element.value = '';\n    element.textContent = ' --- Selecciona una capa --- ';\n    this.layerSelector.appendChild(element);\n    for (let index = 0; index < values.length; index++) {\n      let layer = values[index];\n      element = document.createElement('option');\n      element.value = layer.name + '*' + layer.options.styles;\n      element.textContent = layer.legend\n      this.layerSelector.appendChild(element);\n    }\n  }\n\n  fillLayerSelectorOptionGroups(values) {\n    this.layerList = new Array();\n    let find = false;\n    this.layerSelector.innerHTML = '';\n    let element = document.createElement('option');\n    element.value = '';\n    element.textContent = ' --- Selecciona una capa --- ';\n    this.layerSelector.appendChild(element);\n    for (let x = 0; x < values.length; x++) {\n\n      let group = values[x].group;\n      let optgroup = document.createElement('optgroup');\n      optgroup.label = group;\n      do {\n        for (let y = 0; y < values.length; y++) {\n          if (values[y].group == group) {\n            let layers = values[x].layers\n            for (let index = 0; index < layers.length; index++) {\n              let layer = layers[index];\n              this.layerList.push(layer);\n              let option = document.createElement('option');\n              option.value = layer.name + '*' + layer.options.styles;\n              option.textContent = layer.legend;\n              optgroup.appendChild(option);\n            }\n            find = true;\n          }\n        }\n      } while (!find);\n      this.layerSelector.appendChild(optgroup);\n    }\n  }\n\n\n  LoadLayer(value) {\n    let name = value.split('*')[0]\n    let style = value.split('*')[1]\n    let find = false;\n    this.map_.removeLayers(this.layer);\n\n    do {\n      for (let i = 0; i < this.layerList.length; i++) {\n        if (this.layerList[i].options.styles) {\n          if (this.layerList[i].name == name && this.layerList[i].options.styles == style) {\n            this.layer = this.layerList[i]\n            find = true;\n          }\n        } else {\n          if (this.layerList[i].name == name) {\n            this.layer = this.layerList[i]\n            find = true;\n          }\n        }\n      }\n    } while (!find);\n\n    this.map_.addLayers([this.layer]);\n    this.layer.setOpacity(0.9);\n    this.layer.displayInLayerSwitcher = true;\n\n    if (this.map_.getControls({ 'name': 'layerswitcher' }).length > 0) {\n      this.map_.getControls({ 'name': 'layerswitcher' })[0].render();\n    }\n\n    this.layer.on(M.evt.LOAD, () => {\n      this.fire(M.evt.LOAD)\n    })\n  }\n}\n","/* eslint-disable no-console */\n/**\n * @module M/plugin/Inputselectaddlayer\n */\nimport 'assets/css/inputselectaddlayer';\nimport InputselectaddlayerControl from './inputselectaddlayercontrol';\nimport api from '../../api.json';\n\nexport default class Inputselectaddlayer extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor(config) {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n    this.config = config;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * Metadata from api.json\n     * @private\n     * @type {Object}\n     */\n    this.metadata_ = api.metadata;\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    //let this_ = this;\n    this.control_ = new InputselectaddlayerControl(this.config)\n    this.controls_.push(this.control_);\n    this.map_ = map;\n    // panel para agregar control - no obligatorio\n    this.panel_ = new M.ui.Panel('panelInputselectaddlayer', {\n      className: 'm-selector-panel',\n      //collapsible: true,\n      position: M.ui.position.TR,\n      collapsedButtonClass: 'g-cartografia-capas2',\n      tooltip: 'Añadir capa'\n    });\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n\n    this.control_.on(M.evt.ADDED_TO_MAP, () => {\n      this.fire(M.evt.ADDED_TO_MAP);\n    });\n\n    this.control_.on(M.evt.LOAD, ()=> {\n      this.fire(M.evt.LOAD);\n    })\n  }\n  /**\n   * This function gets metadata plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getMetadata() {\n    return this.metadata_;\n  }\n\n  getLayer(){\n    return this.control_.layer\n  }\n}\n","import M$plugin$Inputselectaddlayer from '/home/epardo/proyectos/inputselectaddlayer/src/facade/js/inputselectaddlayer';\nimport M$control$InputselectaddlayerControl from '/home/epardo/proyectos/inputselectaddlayer/src/facade/js/inputselectaddlayercontrol';\nimport M$impl$control$InputselectaddlayerControl from '/home/epardo/proyectos/inputselectaddlayer/src/impl/ol/js/inputselectaddlayercontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.Inputselectaddlayer = M$plugin$Inputselectaddlayer;\nwindow.M.control.InputselectaddlayerControl = M$control$InputselectaddlayerControl;\nwindow.M.impl.control.InputselectaddlayerControl = M$impl$control$InputselectaddlayerControl;\n"],"sourceRoot":""}